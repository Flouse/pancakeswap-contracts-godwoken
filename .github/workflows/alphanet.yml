name: Alphanet testing

on:
  push:

jobs:
  job1:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    if: ${{ true }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Node Cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: check IP
      run: curl https://cip.cc
    - name: Testcase - Pancakeswap
      run: |
        yarn && yarn compile
        ENV_PATH=./alphanet.env yarn ts-node ./scripts/batch-transactions.ts

  job2:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    if: ${{ true }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Node Cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: check IP
      run: curl https://cip.cc
    - name: Testcase - Pancakeswap
      run: |
        yarn && yarn compile
        ENV_PATH=./alphanet.env yarn ts-node ./scripts/batch-transactions.ts

  job3:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    if: ${{ true }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Node Cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: check IP
      run: curl https://cip.cc
    - name: Testcase - Pancakeswap
      run: |
        yarn && yarn compile
        ENV_PATH=./alphanet.env yarn ts-node ./scripts/batch-transactions.ts

  job4:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    if: ${{ true }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Node Cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: check IP
      run: curl https://cip.cc
    - name: Testcase - Pancakeswap
      run: |
        yarn && yarn compile
        ENV_PATH=./alphanet.env yarn ts-node ./scripts/batch-transactions.ts

  job5:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    if: ${{ true }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Node Cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: check IP
      run: curl https://cip.cc
    - name: Testcase - Pancakeswap
      run: |
        yarn && yarn compile
        ENV_PATH=./alphanet.env yarn ts-node ./scripts/batch-transactions.ts

  job6:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    if: ${{ true }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Node Cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: check IP
      run: curl https://cip.cc
    - name: Testcase - Pancakeswap
      run: |
        yarn && yarn compile
        ENV_PATH=./alphanet.env yarn ts-node ./scripts/batch-transactions.ts

  job7:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    if: ${{ true }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Node Cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: check IP
      run: curl https://cip.cc
    - name: Testcase - Pancakeswap
      run: |
        yarn && yarn compile
        ENV_PATH=./alphanet.env yarn ts-node ./scripts/batch-transactions.ts

  job8:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    if: ${{ true }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Node Cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: check IP
      run: curl https://cip.cc
    - name: Testcase - Pancakeswap
      run: |
        yarn && yarn compile
        ENV_PATH=./alphanet.env yarn ts-node ./scripts/batch-transactions.ts

  job9:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    if: ${{ true }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Node Cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: check IP
      run: curl https://cip.cc
    - name: Testcase - Pancakeswap
      run: |
        yarn && yarn compile
        ENV_PATH=./alphanet.env yarn ts-node ./scripts/batch-transactions.ts

  job10:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    if: ${{ true }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Node Cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: check IP
      run: curl https://cip.cc
    - name: Testcase - Pancakeswap
      run: |
        yarn && yarn compile
        ENV_PATH=./alphanet.env yarn ts-node ./scripts/batch-transactions.ts

  long-time-job:
    runs-on: ubuntu-latest
    if: ${{ true }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Node Cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: check IP
      run: curl https://cip.cc
    - name: Testcase - Pancakeswap
      run: |
        yarn && yarn compile
        ENV_PATH=./alphanet.env yarn ts-node ./scripts/batch-transactions.ts
